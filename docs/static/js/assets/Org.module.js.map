{"version":3,"file":"Org.module.js","sources":["../../../../src/modules/org/constants/index.tsx","../../../../src/modules/org/actions/org.tsx","../../../../src/modules/org/components/OrgDetails.tsx","../../../../src/modules/org/containers/Org.tsx","../../../../src/modules/org/reducers/Org.tsx","../../../../src/modules/org/epic/org.ts","../../../../src/modules/org/Org.module.tsx"],"sourcesContent":["\n\nexport const FETCH_GITHUB_ORG_START = 'FETCH_GITHUB_ORG_START';\nexport type FETCH_GITHUB_ORG_START = typeof FETCH_GITHUB_ORG_START;\nexport const FETCH_GITHUB_ORG_DETAILS = 'FETCH_GITHUB_ORG_DETAILS';\nexport type FETCH_GITHUB_ORG_DETAILS = typeof FETCH_GITHUB_ORG_DETAILS;\nexport const FETCH_GITHUB_ORG_DETAILS_FULFILLED = 'FETCH_GITHUB_ORG_DETAILS_FULFILLED';\nexport type FETCH_GITHUB_ORG_DETAILS_FULFILLED = typeof FETCH_GITHUB_ORG_DETAILS_FULFILLED;\nexport const FETCH_GITHUB_ORG_DETAILS_CANCEL = 'FETCH_GITHUB_ORG_DETAILS_CANCEL';\nexport type FETCH_GITHUB_ORG_DETAILS_CANCEL = typeof FETCH_GITHUB_ORG_DETAILS_CANCEL;\nexport const FETCH_GITHUB_ORG_DETAILS_FAILED = 'FETCH_GITHUB_ORG_DETAILS_FAILED';\nexport type FETCH_GITHUB_ORG_DETAILS_FAILED = typeof FETCH_GITHUB_ORG_DETAILS_FAILED;\n\n\nexport const FETCH_GITHUB_ORG_REPO_START = 'FETCH_GITHUB_ORG_REPO_START';\nexport type FETCH_GITHUB_ORG_REPO_START = typeof FETCH_GITHUB_ORG_REPO_START;\nexport const FETCH_GITHUB_ORG_REPO_DETAILS = 'FETCH_GITHUB_ORG_REPO_DETAILS';\nexport type FETCH_GITHUB_ORG_REPO_DETAILS = typeof FETCH_GITHUB_ORG_REPO_DETAILS;\nexport const FETCH_GITHUB_ORG_REPO_FULFILLED = 'FETCH_GITHUB_ORG_REPO_FULFILLED';\nexport type FETCH_GITHUB_ORG_REPO_FULFILLED = typeof FETCH_GITHUB_ORG_REPO_FULFILLED;\nexport const FETCH_GITHUB_ORG_REPO_CANCEL = 'FETCH_GITHUB_ORG_REPO_CANCEL';\nexport type FETCH_GITHUB_ORG_REPO_CANCEL = typeof FETCH_GITHUB_ORG_REPO_CANCEL;\nexport const FETCH_GITHUB_ORG_REPO_FAILED = 'FETCH_GITHUB_ORG_REPO_FAILED';\nexport type FETCH_GITHUB_ORG_REPO_FAILED = typeof FETCH_GITHUB_ORG_REPO_FAILED;\n\n\n","import * as constants from '../constants';\n\n// only for redirection on same page\nexport interface FetchGithubOrgStart {\n    type: constants.FETCH_GITHUB_ORG_START\n}\n// will actually call API\nexport interface FetchGithubOrg {\n    type: constants.FETCH_GITHUB_ORG_DETAILS,\n    GithubOrgName: string\n}\n\nexport interface FetchGithubOrgFulfilled {\n    type: constants.FETCH_GITHUB_ORG_DETAILS_FULFILLED,\n    GithubOrgDetails: object\n}\n\nexport interface FetchGithubOrgCancel {\n    type: constants.FETCH_GITHUB_ORG_DETAILS_CANCEL\n}\n\nexport interface FetchGithubOrgFailed {\n    type: constants.FETCH_GITHUB_ORG_DETAILS_FAILED\n}\n\n\nexport function fetchGithubOrgStart ():FetchGithubOrgStart  {\n    return {\n        type: constants.FETCH_GITHUB_ORG_START,\n    }\n}\n\nexport function fetchGithubOrg (GithubOrgName: string):FetchGithubOrg  {\n    return {\n        type: constants.FETCH_GITHUB_ORG_DETAILS,\n        GithubOrgName\n    }\n}\n\nexport function fetchGithubOrgFulfilled (GithubOrgDetails: object):FetchGithubOrgFulfilled  {\n    return {\n        type: constants.FETCH_GITHUB_ORG_DETAILS_FULFILLED,\n        GithubOrgDetails\n    }\n}\n\nexport function fetchGithubOrgCancel ():FetchGithubOrgCancel  {\n    return {\n        type: constants.FETCH_GITHUB_ORG_DETAILS_CANCEL,\n    }\n}\n\nexport function fetchGithubOrgFailed ():FetchGithubOrgFailed  {\n    return {\n        type: constants.FETCH_GITHUB_ORG_DETAILS_FAILED,\n    }\n}\n\nexport type AllAction =  FetchGithubOrgStart | FetchGithubOrg | FetchGithubOrgFulfilled | FetchGithubOrgCancel | FetchGithubOrgFailed ;\n\n","import * as React from 'react';\nimport './OrgDetails.scss';\n\n/* tslint:disable:no-string-literal */\nconst qs = window['qs'];\n/* tslint:disable:no-string-literal */\n// import * as qs from 'query-string';\n\n\n/*\ninterface IProps {\n    githubOrgName: string,\n    githubOrgLoading: boolean,\n    githubOrgDetails: {\n        data: object\n    },\n    fetchGithubOrgStart: () => void,\n    fetchGithubOrg: (githubOrgName: string) => void,\n    fetchGithubOrgCancel: () => void,\n    search: object,\n    history: {\n        push: (path: string) => void\n    }\n\n}\n*/\n\ninterface IState {\n    githubOrgName: string;\n    hideShow: string;\n}\n\nexport default class OrgDetails extends React.Component<any, IState> {\n\n    public state: IState = {\n        githubOrgName: \"\",\n        hideShow: \"hide\",\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    public handleCancel(){\n        this.props.fetchGithubOrgCancel();\n    }\n\n    public handleChange(event) {\n        if (event.target.value) {\n            this.setState({hideShow: \"hide\", githubOrgName: event.target.value});\n        } else {\n            this.setState({hideShow: \"show\", githubOrgName: \"\"});\n        }\n    }\n\n    public handleSubmit(event) {\n        event.preventDefault();\n        if (!this.state.githubOrgName) {\n            this.setState({hideShow: \"show\"});\n        } else {\n            // both below line of code are required to trigger api call from componentWillReceiveProps\n            // this.props.fetchGithubOrgStart();\n            console.log(this.props);\n            window['reacthistory'].push('/org?githubOrgName=' + this.state.githubOrgName);\n\n        }\n    }\n    /* componentWillReceiveProps will be never called as on handleSubmit we change route and its (loading js or creating new cmp) again\n     // this will not work like regular react redux connected component )\n    public componentWillReceiveProps( nextProps) {\n        console.log(this.props  ,nextProps);\n        // nextProps.githubOrgLoading flag is used when handleChange is called and will update state but we don't want to call api\n        // when handleSubmit is called will update  nextProps.githubOrgLoading via action and then updating url that will trigger same cmp\n        // and will go to  componentWillReceiveProps section\n        if (nextProps.githubOrgLoading) {\n            this.props.fetchGithubOrg(qs.parse(nextProps.location.search, {ignoreQueryPrefix: true}).githubOrgName);\n        }\n\n        if(qs.parse(this.props.search).githubOrgName !== qs.parse(nextProps.location.search).githubOrgName && !nextProps.githubOrgLoading){\n            this.props.fetchGithubOrgStart();\n        }\n    }\n    */\n\n    public componentDidMount() {\n        const githubOrgName =  qs.parse(this.props.search, {ignoreQueryPrefix: true}).githubOrgName;\n        if (githubOrgName) {\n            this.setState({githubOrgName});\n            // this.props.fetchGithubOrgStart();\n            // console.log(qs);\n            this.props.fetchGithubOrg(qs.parse(this.props.search, {ignoreQueryPrefix: true}).githubOrgName);\n            console.log(this.props,this.state)\n;        }\n    }\n\n    public render() {\n        return (   <div className=\"OrgDetails-cmp\">\n                <div className=\"search-css\">\n                    <h3><span className=\"badge badge-secondary\"> Dashboard</span></h3>\n                    <br/><br/>\n                    <form onSubmit={(e) => this.handleSubmit(e)}>\n                        <div className=\"input-group\">\n                            <input disabled = {this.props.githubOrgLoading} type=\"text\" value={this.state.githubOrgName} onChange={this.handleChange}\n                                   className=\"form-control\" placeholder=\"github orgname\"\n                                   data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Enter github orgname\"/>\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-outline-secondary\" type=\"submit\">Search</button>\n                                <button onClick={this.handleCancel} className=\"btn btn-outline-secondary\" type=\"button\">cancel</button>\n                            </div>\n                        </div>\n                        <div className={`alert alert-danger ${this.state.hideShow} `} role=\"alert\">\n                            Please enter github orgname.\n                        </div>\n                    </form>\n                </div>\n\n                <pre>{JSON.stringify(this.props.githubOrgDetails, null, 2) }</pre>\n\n\n            </div>\n        )\n    }\n}\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport * as actions from '../actions/org';\nimport OrgDetails from \"../components/OrgDetails\";\n\nexport function mapStateToProps(state) {\n    return {\n        pathname: state.router.location.pathname,\n        search: state.router.location.search,\n        hash: state.router.location.hash,\n        githubOrgLoading: state.orgReducer.githubOrgLoading,\n        githubOrgName : state.orgReducer.githubOrgName,\n        githubOrgDetails : state.orgReducer.githubOrgDetails,\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<actions.AllAction>) {\n    return {\n        fetchGithubOrgStart: () => dispatch(actions.fetchGithubOrgStart()),\n        fetchGithubOrgCancel:() => dispatch(actions.fetchGithubOrgCancel()),\n        fetchGithubOrg: (githubOrgName : string) => dispatch(actions.fetchGithubOrg(githubOrgName))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrgDetails);\n","import * as constants from '../constants'\nimport { AllAction } from '../actions/org';\nimport { Org } from '../types/Org';\n\nexport function orgReducer(state : Org = { githubOrgName: \"\",githubOrgLoading:false , githubOrgDetails :{}}, action: AllAction): Org {\n    switch (action.type) {\n        case constants.FETCH_GITHUB_ORG_START :\n            return {...state  ,githubOrgLoading:true };\n        case constants.FETCH_GITHUB_ORG_DETAILS :\n            return {...state  ,githubOrgName : action.GithubOrgName, githubOrgLoading:false };\n        case constants.FETCH_GITHUB_ORG_DETAILS_FULFILLED :\n            return {...state , githubOrgDetails : action.GithubOrgDetails ,githubOrgLoading:false};\n        case constants.FETCH_GITHUB_ORG_DETAILS_CANCEL :\n            return {...state , githubOrgLoading:false};\n        case constants.FETCH_GITHUB_ORG_DETAILS_FAILED :\n            return {...state , githubOrgLoading:false};\n        default:\n            return state;\n    }\n\n}\n","import { ofType } from 'redux-observable';\nimport { concat } from 'rxjs';\nimport * as rxoperators from 'rxjs/operators';\n\n\n// import  constant\nimport { FETCH_GITHUB_ORG_DETAILS , FETCH_GITHUB_ORG_DETAILS_CANCEL  } from '../constants';\n// import type and // import method\nimport { FetchGithubOrg, fetchGithubOrgFulfilled    } from '../actions/org';\n\n/* tslint:disable:no-string-literal */\nconst getRequest = window['apiClient']['getRequest'];\n\nexport function apiLocation() {\n    return 'https://api.github.com' || 'http://localhost:4001' ;\n}\n\nexport const fetchGithubOrgEpic = (action$ : any) => {\n    return action$.pipe(\n        ofType(FETCH_GITHUB_ORG_DETAILS),\n        rxoperators.mergeMap(mergeResponse));\n\n    function mergeResponse(action : FetchGithubOrg) {\n        return getRequest({\n                url:`${apiLocation()}/orgs/${action.GithubOrgName}`,\n                withCredentials : false,\n            },fetchGithubOrgFulfilled,\n            (err) => {\n\n                console.log(err);\n                return concat([{ type : 'FETCH_GITHUB_ORG_DETAILS_FAILED'}]);\n            }\n            ,action$, [FETCH_GITHUB_ORG_DETAILS_CANCEL]);\n    }\n};\n\nexport const fetchGithubOrgNewEpic = (action$ : any) => {\n    return action$.pipe(\n        ofType(FETCH_GITHUB_ORG_DETAILS),\n        rxoperators.mergeMap(mergeResponse));\n\n    function mergeResponse(action : FetchGithubOrg) {\n        return getRequest({\n                url:`${apiLocation()}/orgs/${action.GithubOrgName}`,\n                withCredentials : false,\n            },fetchGithubOrgFulfilled,\n            (err) => {\n\n                console.log(err);\n                return concat([{ type : 'FETCH_GITHUB_ORG_DETAILS_FAILED'}]);\n            }\n            ,action$, [FETCH_GITHUB_ORG_DETAILS_CANCEL]);\n    }\n};\n","import * as React from 'react';\nimport \"./Org.module.scss\";\n\nimport OrgDetailsContainer from './containers/Org';\n\n\n/* tslint:disable:no-string-literal */\n// add reducer to root reducer\nimport  { orgReducer }  from './reducers/Org';\n// window['tempStore'] = window['store'].getState();\nwindow['store'].injectReducer('orgReducer' , orgReducer);\n// add epic of module\nimport { fetchGithubOrgEpic } from './epic/org';\nlet addEpicFlag = true;\nfor (const value of window['epicRegistry']) {\n\n    if(value.name === fetchGithubOrgEpic.name){\n        addEpicFlag = false;\n        break;\n    }\n}\nif(addEpicFlag){\n    window['epic$'].next(fetchGithubOrgEpic);\n    window['epicRegistry'].push(fetchGithubOrgEpic);\n}\n\n\n\n\nexport class Org extends React.Component<any, any> {\n\n    constructor(props: any) {\n        super(props);\n\n    }\n\n    public render() {\n        return (\n            <div className=\"Org-cmp col-sm-9\">\n\n                  Hello from Daynamic (runtime + lazy ) component, please enter github org name to get info.\n                <OrgDetailsContainer />\n\n            </div>\n        )\n    }\n}\n// expose as many cmp as required\nwindow['tempLazyLoaded'] =  {\n    index : Org,\n    wrapper : OrgDetailsContainer\n};\n"],"names":["constants.FETCH_GITHUB_ORG_START","constants.FETCH_GITHUB_ORG_DETAILS","constants.FETCH_GITHUB_ORG_DETAILS_FULFILLED","constants.FETCH_GITHUB_ORG_DETAILS_CANCEL","tslib_1.__extends","React.createElement","React.Component","actions.fetchGithubOrgStart","actions.fetchGithubOrgCancel","actions.fetchGithubOrg","connect","constants.FETCH_GITHUB_ORG_DETAILS_FAILED","ofType","rxoperators.mergeMap","concat"],"mappings":"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"}